(()=>{"use strict";var e={};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var s=e.g.document;if(!t&&s&&(s.currentScript&&(t=s.currentScript.src),!t)){var r=s.getElementsByTagName("script");r.length&&(t=r[r.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})(),document.querySelector(".usercard__name-user").textContent,document.querySelector(".usercard__about-me").textContent;const t=document.querySelector(".popup__input_profile_name-user"),s=document.querySelector(".popup__input_profile_about-me"),r=document.querySelector(".usercard__edit"),n=document.querySelector("#edit-profile"),i=document.querySelector(".usercard__add-post"),o=document.querySelector("#popup-new-place").querySelector(".popup__form"),a=n.querySelector(".popup__form"),l=document.querySelector(".popup__name-img");class c{constructor({data:e,handleCardClick:t},s){this._name=e.name,this._link=e.link,this._cardTemplate=document.querySelector(s),this._handleCardClick=t}createCard(){return this._element=this._cloneCard(),this._setEventListeners(),this.cardImg=this._element.querySelector(".usercard__img-cards"),this._element.querySelector(".usercard__name-cards").textContent=this._name,this.cardImg.alt=this._name,this.cardImg.src=this._link,this._element}_cloneCard(){return this._cardTemplate.content.querySelector(".usercard__card").cloneNode(!0)}_setEventListeners(){this._element.querySelector(".usercard__btn-delete").addEventListener("click",(()=>this._onClickDelete())),this._element.querySelector(".usercard__like").addEventListener("click",this._onClickLike),this._element.querySelector(".usercard__img-cards").addEventListener("click",this._handleCardClick.bind(this))}_onClickDelete(){this._element.remove(),this._element=null}_onClickLike(){this.classList.toggle("usercard__like_active")}}class u{constructor(e,t){this._formElement=t,this._inputSelector=e.inputSelector,this._submitButtonElement=this._formElement.querySelector(e.submitButtonSelector),this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector))}_showInputError(e,t){const s=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)}_hideInputError=e=>{const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)};_validateField(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput(this._inputList)?(this._submitButtonElement.classList.remove(this._inactiveButtonClass),this._submitButtonElement.setAttribute("disabled",!0)):(this._submitButtonElement.removeAttribute("disabled"),this._submitButtonElement.classList.add(this._inactiveButtonClass))}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._validateField(e),this._toggleButtonState()}))}))}resetSppanError(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}enableValidation(){this._setEventListeners(),this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class p{constructor(e){this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this._overlayClick=this._overlayClick.bind(this)}open(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose),document.addEventListener("click",this._overlayClick)}close(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose),document.removeEventListener("click",this._overlayClick)}_handleEscClose(e){"Escape"===e.key&&this._popup.classList.contains("popup_opened")&&this.close()}_overlayClick(e){e.target.classList.contains("popup")&&this.close()}setEventListeners(){this._popup.querySelector(".popup__close").addEventListener("click",(()=>this.close()))}}class _ extends p{constructor(e,t){super(e),this._handleFormSubmit=t,this._inputList=document.querySelectorAll(".popup__input")}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>this._formValues[e.name]=e.value)),this._formValues}setEventListeners(){super.setEventListeners(),this._form=this._popup.querySelector(".popup__form"),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}close(){super.close(),this._form.reset()}}const d={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__btn",inactiveButtonClass:"popup__btn_valid",inputErrorClass:"popup__input_type_error",errorClass:"error_active"},h=[{name:"Аланский Успенский мужской монастырь",link:e.p+"ea3ea5698ecf08ff4a40.jpg"},{name:"Тоторс",link:e.p+"8ba7a4bb1fba7fe0c56a.jpg"},{name:"Даргавс",link:e.p+"c0d040fe474ea32ec256.jpg"},{name:"Цейское ущелье",link:e.p+"6643d9df4f038302ba2f.jpg"},{name:"Караугом",link:e.p+"5de75ee27b6c1127a983.jpg"},{name:"Владикавказ",link:e.p+"d64b7faed18d800f471a.jpg"}],m=new class{constructor({nameSelector:e,aboutSelector:t}){this._name=document.querySelector(e),this._about=document.querySelector(t)}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent}}setUserInfo({name:e,about:t}){this._name.textContent=e,this._about.textContent=t}}({nameSelector:".usercard__name-user",aboutSelector:".usercard__about-me"}),v=new class extends p{constructor(e){super(e),this._popupImg=this._popup.querySelector(".popup__img"),this._popupNameImg=this._popup.querySelector(".popup__name-img")}open(e){super.open(),this._popupImg.src=e.src,this._popupImg.alt=e.alt,this._popupNameImg.textContent=e.name}}("#popup-new-place-img"),E=new _("#popup-new-place",(function({place:e,link:t}){S.addItems(g({name:e,link:t,alt:e})),E.close()})),f=new _("#edit-profile",(function({name:e,about:t}){m.setUserInfo({name:e,about:t}),f.close()})),S=new class{constructor({items:e,renderer:t},s){this._items=e,this._renderer=t,this._container=document.querySelector(s)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItems(e){this._container.prepend(e)}}({items:h,renderer:e=>S.addItems(g(e))},".usercard__content"),b=new u(d,o);b.enableValidation();const C=new u(d,a);function g(e){return new c({data:e,handleCardClick:y},".usercard__blank-card").createCard()}function y(e){const t=e.target.getAttribute("src"),s=e.target.getAttribute("alt");v.open({src:t,alt:s}),l.textContent=s}C.enableValidation(),r.addEventListener("click",(function(){f.open(),C.resetSppanError(),t.value=m.getUserInfo().name,s.value=m.getUserInfo().about})),i.addEventListener("click",(function(){E.open(),b.resetSppanError()})),S.renderItems(),E.setEventListeners(),f.setEventListeners(),v.setEventListeners()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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eENDLEVBQWdCdEQsRUFBSVksT0FBT3lDLGFBQWEsT0FHOUNwQixFQUFlMUIsS0FBTSxDQUFDdkYsSUFBS29JLEVBQWVuRyxJQUFLcUcsSUFDL0N0SCxFQUFRUixZQUFjOEgsRUF2Q3ZCSCxFQUFjcEQsbUJBMkNkcEUsRUFBUXlCLGlCQUFpQixTQW5DekIsV0FDQ29GLEVBQVVqQyxPQUNWNEMsRUFBY3JELGtCQUNkckUsRUFBVTJGLE1BQVFNLEVBQVNJLGNBQWN2RixLQUN6Q2IsRUFBVzBGLE1BQVFNLEVBQVNJLGNBQWNDLFNBaUMzQ2xHLEVBQVl1QixpQkFBaUIsU0F2QjdCLFdBQ0NnRixFQUFTN0IsT0FDVDJDLEVBQWFwRCxxQkF3QmR3QyxFQUFZUSxjQUNaVixFQUFTdkIsb0JBQ1QyQixFQUFVM0Isb0JBQ1ZvQixFQUFlcEIscUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXN0by93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9tZXN0by93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL21lc3RvL3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL21lc3RvLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3V0aWxzL3ZhbGlkYXRpb25Db25maWcuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvdXRpbHMvaW5pdGlhbC3RgWFyZHMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvcGFnZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUgcmVxdWlyZSBzY29wZVxudmFyIF9fd2VicGFja19yZXF1aXJlX18gPSB7fTtcblxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmNcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSBzY3JpcHRVcmwgPSBzY3JpcHRzW3NjcmlwdHMubGVuZ3RoIC0gMV0uc3JjXG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIi8vINCX0LDQs9C+0LvQvtCy0LrQuCBcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi51c2VyY2FyZF9fbmFtZS11c2VyXCIpLnRleHRDb250ZW50OyBcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVBYm91dE1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi51c2VyY2FyZF9fYWJvdXQtbWVcIikudGV4dENvbnRlbnQ7XHJcblxyXG4vLyDQmNC90L/Rg9GC0YtcclxuZXhwb3J0IGNvbnN0IG5hbWVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2lucHV0X3Byb2ZpbGVfbmFtZS11c2VyXCIpO1xyXG5leHBvcnQgY29uc3QgYWJvdXRJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2lucHV0X3Byb2ZpbGVfYWJvdXQtbWVcIik7XHJcblxyXG4vLyDQo9C/0YDQsNCy0LvQtdC90LjQtSBwb3B1cFxyXG5leHBvcnQgY29uc3QgYnRuRWRpdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudXNlcmNhcmRfX2VkaXRcIik7XHJcbmV4cG9ydCBjb25zdCBlZGl0UG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2VkaXQtcHJvZmlsZVwiKTtcclxuXHJcbi8qICAgIHBvcHVwIG5ldyBwbGFjZSAgICAgKi8gXHJcbmV4cG9ydCBjb25zdCBidG5OZXdQbGFjZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudXNlcmNhcmRfX2FkZC1wb3N0XCIpO1xyXG5leHBvcnQgY29uc3QgYWRkUG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3BvcHVwLW5ldy1wbGFjZVwiKTtcclxuXHJcbmV4cG9ydCBjb25zdCBhZGRGb3JtID0gYWRkUG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19mb3JtJyk7XHJcbmV4cG9ydCBjb25zdCBlZGl0Rm9ybSA9IGVkaXRQb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm0nKTtcclxuZXhwb3J0IGNvbnN0IG5hbWVJbWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX25hbWUtaW1nJyk7IiwiXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xyXG5cdGNvbnN0cnVjdG9yKHtkYXRhLCBoYW5kbGVDYXJkQ2xpY2t9LCBjYXJkVGVtcGxhdGVTZWxlY3Rvcil7XHJcblx0XHR0aGlzLl9uYW1lID0gZGF0YS5uYW1lO1xyXG5cdFx0dGhpcy5fbGluayA9IGRhdGEubGluaztcclxuXHRcdHRoaXMuX2NhcmRUZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY2FyZFRlbXBsYXRlU2VsZWN0b3IpO1xyXG5cdFx0dGhpcy5faGFuZGxlQ2FyZENsaWNrID0gaGFuZGxlQ2FyZENsaWNrO1xyXG5cdH1cclxuXHRcclxuXHRjcmVhdGVDYXJkKCkge1xyXG5cdFx0dGhpcy5fZWxlbWVudCA9IHRoaXMuX2Nsb25lQ2FyZCgpO1xyXG4gICAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG5cdFx0dGhpcy5jYXJkSW1nID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcudXNlcmNhcmRfX2ltZy1jYXJkcycpO1xyXG5cdFx0dGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcudXNlcmNhcmRfX25hbWUtY2FyZHMnKS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XHJcblx0XHR0aGlzLmNhcmRJbWcuYWx0ID0gdGhpcy5fbmFtZTtcclxuXHRcdHRoaXMuY2FyZEltZy5zcmMgPSB0aGlzLl9saW5rO1xyXG5cclxuXHRcdHJldHVybiB0aGlzLl9lbGVtZW50O1xyXG5cdH1cclxuXHJcblx0X2Nsb25lQ2FyZCgpIHtcclxuXHRcdHJldHVybiB0aGlzLl9jYXJkVGVtcGxhdGUuY29udGVudC5xdWVyeVNlbGVjdG9yKCcudXNlcmNhcmRfX2NhcmQnKS5jbG9uZU5vZGUodHJ1ZSk7XHJcblx0fSAgICBcclxuXHJcblx0X3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG5cdFx0Ly9kZWxcclxuXHRcdHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLnVzZXJjYXJkX19idG4tZGVsZXRlJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLl9vbkNsaWNrRGVsZXRlKCkpO1xyXG5cclxuXHRcdC8vbGlrZVxyXG5cdFx0dGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcudXNlcmNhcmRfX2xpa2UnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICB0aGlzLl9vbkNsaWNrTGlrZSk7XHJcblxyXG5cdFx0Ly9wcmV2aWV3XHJcblx0XHR0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy51c2VyY2FyZF9faW1nLWNhcmRzJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9oYW5kbGVDYXJkQ2xpY2suYmluZCh0aGlzKSk7XHJcblx0fVxyXG5cdFxyXG5cdF9vbkNsaWNrRGVsZXRlICgpIHtcclxuXHRcdHRoaXMuX2VsZW1lbnQucmVtb3ZlKCk7XHJcblx0XHR0aGlzLl9lbGVtZW50ID0gbnVsbDtcclxuXHR9XHJcblxyXG5cdF9vbkNsaWNrTGlrZSgpIHtcclxuXHRcdHRoaXMuY2xhc3NMaXN0LnRvZ2dsZSgndXNlcmNhcmRfX2xpa2VfYWN0aXZlJyk7XHJcblx0fVxyXG5cclxufTtcclxuXHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xyXG5cdGNvbnN0cnVjdG9yKGNvbmZpZywgZm9ybUVsZW1lbnQpe1xyXG5cdFx0dGhpcy5fZm9ybUVsZW1lbnQgPSBmb3JtRWxlbWVudDtcclxuXHRcdHRoaXMuX2lucHV0U2VsZWN0b3IgPSBjb25maWcuaW5wdXRTZWxlY3RvcjtcclxuXHRcdHRoaXMuX3N1Ym1pdEJ1dHRvbkVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGNvbmZpZy5zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcblx0XHR0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3M7XHJcblx0XHR0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBjb25maWcuaW5wdXRFcnJvckNsYXNzO1xyXG5cdFx0dGhpcy5fZXJyb3JDbGFzcyA9IGNvbmZpZy5lcnJvckNsYXNzO1xyXG5cdFx0dGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbSh0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpKTtcclxuXHR9XHJcblxyXG5cdF9zaG93SW5wdXRFcnJvcihpbnB1dCwgZXJyb3JNZXNzYWdlKSB7XHJcblx0XHRjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dC5pZH0tZXJyb3JgKTtcclxuXHRcdGlucHV0LmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuXHRcdC8vINCf0L7QutCw0LfRi9Cy0LDQtdC8INGB0L7QvtCx0YnQtdC90LjQtSDQvtCxINC+0YjQuNCx0LrQtVxyXG5cdFx0ZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xyXG5cdFx0ZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3JDbGFzcyk7Ly/Qv9C+0LTRgdCy0LXRgiDQutGA0LDRgdC90YvQvFxyXG5cdH07XHJcblxyXG5cdF9oaWRlSW5wdXRFcnJvciA9IChpbnB1dCkgPT4ge1xyXG5cdFx0Y29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXQuaWR9LWVycm9yYCk7XHJcblx0XHRpbnB1dC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcblx0XHQgLy8g0KHQutGA0YvQstCw0LXQvCDRgdC+0L7QsdGJ0LXQvdC40LUg0L7QsSDQvtGI0LjQsdC60LVcclxuXHRcdCBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSAnJztcclxuXHRcdCAvLyDRg9Cx0LjRgNCw0LXQvCDQv9C+0LTRgdCy0LXRgtC60YNcclxuXHRcdCAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XHJcblx0fTtcclxuXHJcblx0X3ZhbGlkYXRlRmllbGQgKGlucHV0KSB7XHJcblx0XHRpZiAoIWlucHV0LnZhbGlkaXR5LnZhbGlkKSB7XHJcblx0XHRcdC8vINCV0YHQu9C4INC/0L7Qu9C1INC90LUg0L/RgNC+0YXQvtC00LjRgiDQstCw0LvQuNC00LDRhtC40Y4sINC/0L7QutCw0LbQtdC8INC+0YjQuNCx0LrRg1xyXG5cdFx0XHR0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dCwgaW5wdXQudmFsaWRhdGlvbk1lc3NhZ2UpO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0Ly8g0JXRgdC70Lgg0L/RgNC+0YXQvtC00LjRgiwg0YHQutGA0L7QtdC8XHJcblx0XHRcdHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0KTtcclxuXHRcdH1cclxuXHR9O1xyXG5cclxuXHRfaGFzSW52YWxpZElucHV0KCkgeyBcclxuXHRcdC8vINC/0YDQvtGF0L7QtNC40Lwg0L/QviDRjdGC0L7QvNGDINC80LDRgdGB0LjQstGDINC80LXRgtC+0LTQvtC8IHNvbWVcclxuXHRcdHJldHVybiB0aGlzLl9pbnB1dExpc3Quc29tZSgoaW5wdXQpID0+IHtcclxuXHRcdCAgLy8g0JXRgdC70Lgg0L/QvtC70LUg0L3QtSDQstCw0LvQuNC00L3Qviwg0LrQvtC70LHRjdC6INCy0LXRgNC90ZHRgiB0cnVlXHJcblx0XHQgIC8vINCe0LHRhdC+0LQg0LzQsNGB0YHQuNCy0LAg0L/RgNC10LrRgNCw0YLQuNGC0YHRjyDQuCDQstGB0Y8g0YTRg9C90YbQutGG0LjRj1xyXG5cdFx0ICAvLyBoYXNJbnZhbGlkSW5wdXQg0LLQtdGA0L3RkdGCIHRydWVcclxuXHQgXHJcblx0XHQgIHJldHVybiAhaW5wdXQudmFsaWRpdHkudmFsaWQ7XHJcblx0XHR9KTtcclxuXHR9O1xyXG5cclxuXHRfdG9nZ2xlQnV0dG9uU3RhdGUgKCkge1xyXG5cdFx0Ly8g0JXRgdC70Lgg0LXRgdGC0Ywg0YXQvtGC0Y8g0LHRiyDQvtC00LjQvSDQvdC10LLQsNC70LjQtNC90YvQuSDQuNC90L/Rg9GCXHJcblx0XHRpZiAodGhpcy5faGFzSW52YWxpZElucHV0KHRoaXMuX2lucHV0TGlzdCkpIHtcclxuXHRcdCAgLy8g0YHQtNC10LvQsNC5INC60L3QvtC/0LrRgyDQvdC10LDQutGC0LjQstC90L7QuVxyXG5cdFx0ICB0aGlzLl9zdWJtaXRCdXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcblx0XHQgIHRoaXMuX3N1Ym1pdEJ1dHRvbkVsZW1lbnQuc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsIHRydWUpO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdCAgLy8g0LjQvdCw0YfQtSDRgdC00LXQu9Cw0Lkg0LrQvdC+0L/QutGDINCw0LrRgtC40LLQvdC+0LlcclxuXHRcdCAgdGhpcy5fc3VibWl0QnV0dG9uRWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XHJcblx0XHQgIHRoaXMuX3N1Ym1pdEJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuXHRcdH1cclxuXHR9OyBcclxuXHJcblx0XHJcblx0X3NldEV2ZW50TGlzdGVuZXJzICgpIHtcclxuXHRcdHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcblx0XHQvLyDQntCx0L7QudC00ZHQvCDQstGB0LUg0Y3Qu9C10LzQtdC90YLRiyDQv9C+0LvRg9GH0LXQvdC90L7QuSDQutC+0LvQu9C10LrRhtC40LhcclxuXHRcdHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4ge1xyXG5cdFx0ICAvLyDQutCw0LbQtNC+0LzRgyDQv9C+0LvRjiDQtNC+0LHQsNCy0LjQvCDQvtCx0YDQsNCx0L7RgtGH0LjQuiDRgdC+0LHRi9GC0LjRjyBpbnB1dFxyXG5cdFx0ICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsICgpID0+IHtcclxuXHRcdFx0IHRoaXMuX3ZhbGlkYXRlRmllbGQoaW5wdXQpO1xyXG5cdFx0XHQgLy8g0JLRi9C30L7QstC10LwgdG9nZ2xlQnV0dG9uU3RhdGUgXHJcblx0XHRcdCB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG5cdFx0ICB9KTtcclxuXHRcdH0pO1xyXG5cdH07XHJcblxyXG5cclxuXHRyZXNldFNwcGFuRXJyb3IoKSAge1xyXG5cdFx0XHR0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG5cdFx0XHR0aGlzLl9pbnB1dExpc3QuZm9yRWFjaChpbnB1dCA9PiB7XHJcblx0XHRcdFx0dGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXQpO1xyXG5cdFx0XHR9KTtcclxuXHRcdH07XHJcblxyXG5cdGVuYWJsZVZhbGlkYXRpb24oKSB7XHJcblx0XHR0aGlzLl9zZXRFdmVudExpc3RlbmVycyAoKVxyXG5cdFx0Ly8g0J/QtdGA0LXQsdC10YDRkdC8INC/0L7Qu9GD0YfQtdC90L3Rg9GOINC60L7Qu9C70LXQutGG0LjRjlxyXG5cdFx0XHQgIHRoaXMuX2Zvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldnQpID0+IHtcclxuXHRcdFx0IC8vINCjINC60LDQttC00L7QuSDRhNC+0YDQvNGLINC+0YLQvNC10L3QuNC8INGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0L/QvtCy0LXQtNC10L3QuNC1XHJcblx0XHRcdCBldnQucHJldmVudERlZmF1bHQoKTtcclxuXHRcdCAgfSk7XHJcblx0IFxyXG5cdFx0ICAvLyDQlNC70Y8g0LrQsNC20LTQvtC5INGE0L7RgNC80Ysg0LLRi9C30L7QstC10Lwg0YTRg9C90LrRhtC40Y4gc2V0RXZlbnRMaXN0ZW5lcnMsXHJcblx0XHQgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG5cdFx0XHRcclxuXHRcdH07XHJcblx0XHJcblx0XHRcclxufVxyXG5cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXB7XHJcbiAgIGNvbnN0cnVjdG9yKHNlbGVjdG9yKXtcclxuICAgICAgdGhpcy5fcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTtcclxuICAgICAgdGhpcy5faGFuZGxlRXNjQ2xvc2UgPSB0aGlzLl9oYW5kbGVFc2NDbG9zZS5iaW5kKHRoaXMpO1xyXG4gICAgICB0aGlzLl9vdmVybGF5Q2xpY2sgPSB0aGlzLl9vdmVybGF5Q2xpY2suYmluZCh0aGlzKTtcclxuICAgfTtcclxuXHJcbiAgIG9wZW4oKSB7XHJcbiAgICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9vcGVuZWRcIik7XHJcbiAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgIHRoaXMuX292ZXJsYXlDbGljayk7XHJcbiAgIH1cclxuXHJcbiAgIGNsb3NlKCkge1xyXG4gICAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QucmVtb3ZlKFwicG9wdXBfb3BlbmVkXCIpO1xyXG4gICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCAgdGhpcy5fb3ZlcmxheUNsaWNrKTtcclxuICAgfVxyXG5cclxuICAgX2hhbmRsZUVzY0Nsb3NlKGV2dCkge1xyXG4gICAgICBpZiAoZXZ0LmtleSA9PT0gJ0VzY2FwZScgJiYgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmNvbnRhaW5zKCdwb3B1cF9vcGVuZWQnKSkge1xyXG4gICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgIH1cclxuICAgfVxyXG5cclxuICAgX292ZXJsYXlDbGljayhldnQpe1xyXG4gICAgICBpZiAoZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3BvcHVwJykpIHtcclxuICAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICB9XHJcbiAgIH1cclxuXHJcbiAgIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgICB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Nsb3NlJykuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHRoaXMuY2xvc2UoKSk7XHJcbiAgIH1cclxufSIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcclxuICAgY29uc3RydWN0b3Ioc2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQpe1xyXG4gICAgICBzdXBlcihzZWxlY3Rvcik7XHJcbiAgICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xyXG4gICAgICB0aGlzLl9pbnB1dExpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnBvcHVwX19pbnB1dFwiKTtcclxuICAgfVxyXG5cclxuICAgX2dldElucHV0VmFsdWVzKCl7XHJcbiAgICAgIFxyXG4gICAgICB0aGlzLl9mb3JtVmFsdWVzID0ge307XHJcbiAgICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKGlucHV0ID0+IHRoaXMuX2Zvcm1WYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZSk7XHJcbiAgICAgIHJldHVybiB0aGlzLl9mb3JtVmFsdWVzO1xyXG4gICB9XHJcblxyXG4gICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm1cIik7XHJcbiAgICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2dCkgPT4ge1xyXG4gICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcclxuICAgICAgfSk7XHJcbiAgIH1cclxuXHJcbiAgIGNsb3NlKCkge1xyXG4gICAgICBzdXBlci5jbG9zZSgpO1xyXG4gICAgICB0aGlzLl9mb3JtLnJlc2V0KCk7XHJcbiAgIH1cclxufSIsImV4cG9ydCBjb25zdCB2YWxpZGF0aW9uQ29uZmlnID0ge1xyXG5cdGZvcm1TZWxlY3RvcjogJy5wb3B1cF9fZm9ybScsXHJcblx0aW5wdXRTZWxlY3RvcjogJy5wb3B1cF9faW5wdXQnLFxyXG5cdHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiAnLnBvcHVwX19idG4nLFxyXG5cdGluYWN0aXZlQnV0dG9uQ2xhc3M6ICdwb3B1cF9fYnRuX3ZhbGlkJyxcclxuXHRpbnB1dEVycm9yQ2xhc3M6ICdwb3B1cF9faW5wdXRfdHlwZV9lcnJvcicsXHJcblx0ZXJyb3JDbGFzczogJ2Vycm9yX2FjdGl2ZScsXHJcbn07IiwiaW1wb3J0IGFsYW5Ib2x5SW1nIGZyb20gJy4vLi4vaW1nL0FsYW5fSG9seV9Eb3JtaXRpb25fTW9uYXN0ZXJ5LmpwZyc7XHJcbmltcG9ydCB0b3RvcnNJbWcgZnJvbSAnLi8uLi9pbWcv0KLQvtGC0L7RgNGBLmpwZyc7XHJcbmltcG9ydCB0b3duRGVhZEltZyBmcm9tICcuLy4uL2ltZy90b3duLW9mLXRoZS1kZWFkLmpwZyc7XHJcbmltcG9ydCB0c2V5R29yZ2VJbWcgZnJvbSAnLi8uLi9pbWcvVHNleV9Hb3JnZS5qcGcnO1xyXG5pbXBvcnQga2FyYXVnb21JbWcgZnJvbSAnLi8uLi9pbWcv0JrQsNGA0LDRg9Cz0L7QvC5qcGcnO1xyXG5pbXBvcnQgdmxhZGlrYXZrYXpJbWcgZnJvbSAnLi8uLi9pbWcvdmxhZGlrYXZrYXouanBnJztcclxuXHJcbmV4cG9ydCBjb25zdCBpbml0aWFsQ2FyZHMgPSBbXHJcblx0e1xyXG5cdFx0IG5hbWU6ICfQkNC70LDQvdGB0LrQuNC5INCj0YHQv9C10L3RgdC60LjQuSDQvNGD0LbRgdC60L7QuSDQvNC+0L3QsNGB0YLRi9GA0YwnLFxyXG5cdFx0IGxpbms6IGFsYW5Ib2x5SW1nXHJcblx0fSxcclxuXHR7XHJcblx0XHQgbmFtZTogJ9Ci0L7RgtC+0YDRgScsXHJcblx0XHQgbGluazogdG90b3JzSW1nXHJcblx0fSxcclxuXHR7XHJcblx0XHQgbmFtZTogJ9CU0LDRgNCz0LDQstGBJyxcclxuXHRcdCBsaW5rOiB0b3duRGVhZEltZ1xyXG5cdH0sXHJcblx0e1xyXG5cdFx0IG5hbWU6ICfQptC10LnRgdC60L7QtSDRg9GJ0LXQu9GM0LUnLFxyXG5cdFx0IGxpbms6IHRzZXlHb3JnZUltZ1xyXG5cdH0sXHJcblx0e1xyXG5cdFx0IG5hbWU6ICfQmtCw0YDQsNGD0LPQvtC8JyxcclxuXHRcdCBsaW5rOiBrYXJhdWdvbUltZ1xyXG5cdH0sXHJcblx0e1xyXG5cdFx0IG5hbWU6ICfQktC70LDQtNC40LrQsNCy0LrQsNC3JyxcclxuXHRcdCBsaW5rOiB2bGFkaWthdmthekltZ1xyXG5cdH0sXHJcbl07IiwiaW1wb3J0IHtwcm9maWxlTmFtZSwgYWRkRm9ybSwgcHJvZmlsZUFib3V0TWUsIG5hbWVJbWcsIGVkaXRGb3JtLCBuYW1lSW5wdXQsIGFkZFBvcHVwLCBhYm91dElucHV0LCBidG5FZGl0LCBidG5OZXdQbGFjZX0gZnJvbSAnLi4vdXRpbHMvY29uc3RhbnRzLmpzJztcclxuaW1wb3J0IENhcmQgZnJvbSAnLi4vY29tcG9uZW50cy9DYXJkLmpzJztcclxuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSAnLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzJztcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzJztcclxuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMnO1xyXG5pbXBvcnQgU2VjdGlvbiBmcm9tICcuLi9jb21wb25lbnRzL1NlY3Rpb24uanMnO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSAnLi4vY29tcG9uZW50cy9Vc2VySW5mby5qcyc7XHJcbmltcG9ydCB7dmFsaWRhdGlvbkNvbmZpZ30gZnJvbSAnLi4vdXRpbHMvdmFsaWRhdGlvbkNvbmZpZy5qcyc7XHJcbmltcG9ydCB7aW5pdGlhbENhcmRzfSBmcm9tICcuLi91dGlscy9pbml0aWFsLdGBYXJkcy5qcyc7XHJcbmltcG9ydCAnLi9pbmRleC5jc3MnO1xyXG5cclxuLy/QtNCw0L3QvdGL0LUg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPXHJcbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHtuYW1lU2VsZWN0b3I6XCIudXNlcmNhcmRfX25hbWUtdXNlclwiLCBhYm91dFNlbGVjdG9yOlwiLnVzZXJjYXJkX19hYm91dC1tZVwifSk7XHJcbi8vIHBvcHVwIGltZ1xyXG5jb25zdCBwb3B1cFdpdGhJbWFnZSA9IG5ldyBQb3B1cFdpdGhJbWFnZShcIiNwb3B1cC1uZXctcGxhY2UtaW1nXCIpO1xyXG4vLyBwb3B1cCBhZGRcclxuY29uc3QgcG9wdXBBZGQgPSBuZXcgUG9wdXBXaXRoRm9ybShcIiNwb3B1cC1uZXctcGxhY2VcIiwgYWRkRm9ybVN1Ym1pdEhhbmRsZXIpO1xyXG4vL3BvcHVwIGVkaXQgXHJcbmNvbnN0IHBvcHVwRWRpdCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiI2VkaXQtcHJvZmlsZVwiLCBlZGl0Rm9ybVN1Ym1pdEhhbmRsZXIpO1xyXG4vL2NhcmQgc2VjdGlvblxyXG5jb25zdCBjYXJkU2VjdGlvbiA9IG5ldyBTZWN0aW9uKHtcclxuXHRpdGVtczogaW5pdGlhbENhcmRzLCBcclxuXHRyZW5kZXJlcjogKGl0ZW0pID0+IGNhcmRTZWN0aW9uLmFkZEl0ZW1zKGNyZWF0ZUNhcmQoaXRlbVxyXG5cdFx0KSl9LCBcIi51c2VyY2FyZF9fY29udGVudFwiKTtcclxuXHJcbiBcclxuXHJcbmNvbnN0IGFkZEZvcm1WYWxpZCA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhbGlkYXRpb25Db25maWcsIGFkZEZvcm0pO1xyXG5hZGRGb3JtVmFsaWQuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5cclxuY29uc3QgZWRpdEZvcm1WYWxpZCA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhbGlkYXRpb25Db25maWcsIGVkaXRGb3JtKTtcclxuZWRpdEZvcm1WYWxpZC5lbmFibGVWYWxpZGF0aW9uKCk7XHJcblxyXG4vL9GE0YPQvdC60YbQuNGPINGB0L7Qt9C00LDQvdC40Y8g0LrQsNGA0YLRiyDRh9C10YDQtdC3INC/0L7Qv9Cw0L9cclxuZnVuY3Rpb24gY3JlYXRlQ2FyZChpdGVtKSB7XHJcblx0cmV0dXJuIG5ldyBDYXJkKHtkYXRhOiBpdGVtLCBoYW5kbGVDYXJkQ2xpY2t9LCAnLnVzZXJjYXJkX19ibGFuay1jYXJkJykuY3JlYXRlQ2FyZCgpO1xyXG59XHJcblxyXG4vL9C+0YLQvtCx0YDQsNC20LXQvdC40LUg0LjQvdGE0Ysg0L4g0L/QvtC70YzQt9C+0LLQsNGC0LXQu9C1XHJcbmZ1bmN0aW9uIGVkaXRQcm9maWxlKCkge1xyXG5cdHBvcHVwRWRpdC5vcGVuKCk7XHJcblx0ZWRpdEZvcm1WYWxpZC5yZXNldFNwcGFuRXJyb3IoKTtcclxuXHRuYW1lSW5wdXQudmFsdWUgPSB1c2VySW5mby5nZXRVc2VySW5mbygpLm5hbWU7XHJcblx0YWJvdXRJbnB1dC52YWx1ZSA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCkuYWJvdXQ7XHJcbn1cclxuXHJcbi8vINC60L7Qu9Cx0Y3QuiDRgdCw0LHQvNC40YLQsCDRhNC+0YDQvNGLIGVkaXRcclxuZnVuY3Rpb24gZWRpdEZvcm1TdWJtaXRIYW5kbGVyKHtuYW1lLCBhYm91dH0pIHtcclxuXHR1c2VySW5mby5zZXRVc2VySW5mbyh7bmFtZSwgYWJvdXR9KTtcclxuXHRwb3B1cEVkaXQuY2xvc2UoKTtcclxufVxyXG5cclxuXHJcbmZ1bmN0aW9uIGFkZEVsZW1lbnQoKSB7XHJcblx0cG9wdXBBZGQub3BlbigpO1xyXG5cdGFkZEZvcm1WYWxpZC5yZXNldFNwcGFuRXJyb3IoKTtcclxufVxyXG5cclxuLy8g0LrQvtC70LHRjdC6INGB0LDQsdC80LjRgtCwINGE0L7RgNC80YsgYWRkXHJcbmZ1bmN0aW9uIGFkZEZvcm1TdWJtaXRIYW5kbGVyKCB7cGxhY2UsIGxpbmt9ICkge1xyXG5cdGNhcmRTZWN0aW9uLmFkZEl0ZW1zKGNyZWF0ZUNhcmQoIHtuYW1lOiBwbGFjZSwgbGluazogbGluaywgYWx0OiBwbGFjZX0gKSk7XHJcblx0cG9wdXBBZGQuY2xvc2UoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlQ2FyZENsaWNrKGV2dCkge1xyXG5cdGNvbnN0IHBvcHVwSW1hZ2VTcmMgPSBldnQudGFyZ2V0LmdldEF0dHJpYnV0ZShcInNyY1wiKTtcclxuXHRjb25zdCBwb3B1cEltYWdlQWx0ID0gZXZ0LnRhcmdldC5nZXRBdHRyaWJ1dGUoXCJhbHRcIik7XHJcblx0XHJcblx0XHJcblx0cG9wdXBXaXRoSW1hZ2Uub3Blbigge3NyYzogcG9wdXBJbWFnZVNyYywgYWx0OiBwb3B1cEltYWdlQWx0fSApO1xyXG5cdG5hbWVJbWcudGV4dENvbnRlbnQgPSBwb3B1cEltYWdlQWx0O1xyXG59XHJcbiBcclxuLy/RgdC70YPRiNCw0YLQtdC70Ywg0L3QsCDQutC90L7Qv9C60YMg0YDRg9GH0LrQuFxyXG5idG5FZGl0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZWRpdFByb2ZpbGUpO1xyXG4vLyDRgdC70YPRiNCw0YLQtdC70Ywg0LAg0LrQvdC+0L/QutGDICtcclxuYnRuTmV3UGxhY2UuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhZGRFbGVtZW50KTtcclxuIFxyXG5cclxuY2FyZFNlY3Rpb24ucmVuZGVySXRlbXMoKTtcclxucG9wdXBBZGQuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxucG9wdXBFZGl0LnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbnBvcHVwV2l0aEltYWdlLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZve1xyXG4gICBjb25zdHJ1Y3Rvcih7bmFtZVNlbGVjdG9yLCBhYm91dFNlbGVjdG9yfSl7XHJcbiAgICAgIHRoaXMuX25hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKG5hbWVTZWxlY3Rvcik7XHJcbiAgICAgIHRoaXMuX2Fib3V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihhYm91dFNlbGVjdG9yKTtcclxuICAgfVxyXG5cclxuICAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICAgIHJldHVybntcclxuICAgICAgICAgbmFtZTogdGhpcy5fbmFtZS50ZXh0Q29udGVudCxcclxuICAgICAgICAgYWJvdXQ6IHRoaXMuX2Fib3V0LnRleHRDb250ZW50XHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgIH1cclxuXHJcbiAgIHNldFVzZXJJbmZvKHtuYW1lLCBhYm91dH0pe1xyXG4gICAgICB0aGlzLl9uYW1lLnRleHRDb250ZW50ID0gbmFtZTtcclxuICAgICAgdGhpcy5fYWJvdXQudGV4dENvbnRlbnQgPSBhYm91dDtcclxuICAgfVxyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuICIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XHJcbiAgIGNvbnN0cnVjdG9yKHNlbGVjdG9yKXtcclxuICAgICAgc3VwZXIoc2VsZWN0b3IpO1xyXG4gICAgICB0aGlzLl9wb3B1cEltZyA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW1nJyk7XHJcbiAgICAgIHRoaXMuX3BvcHVwTmFtZUltZyA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fbmFtZS1pbWcnKTtcclxuICAgfVxyXG5cclxuICAgb3BlbihkYXRhKSB7XHJcbiAgICAgIHN1cGVyLm9wZW4oKTtcclxuICAgICAgdGhpcy5fcG9wdXBJbWcuc3JjID0gZGF0YS5zcmM7XHJcbiAgICAgIHRoaXMuX3BvcHVwSW1nLmFsdCA9IGRhdGEuYWx0OyBcclxuICAgICAgdGhpcy5fcG9wdXBOYW1lSW1nLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xyXG4gICB9ICAgXHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuICAgY29uc3RydWN0b3Ioe2l0ZW1zLCByZW5kZXJlcn0sIHNlbGVjdG9yKXtcclxuICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9ICByZW5kZXJlcjtcclxuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpO1xyXG4gICB9XHJcblxyXG4gICByZW5kZXJJdGVtcygpIHtcclxuICAgICAgdGhpcy5faXRlbXMuZm9yRWFjaChpdGVtID0+IHtcclxuICAgICAgICB0aGlzLl9yZW5kZXJlcihpdGVtKTtcclxuICAgICAgfSk7XHJcbiAgIH1cclxuICAgXHJcbiAgIGFkZEl0ZW1zKGVsKXtcclxuICAgICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoZWwpXHJcbiAgIH1cclxufTtcclxuXHJcbiJdLCJuYW1lcyI6WyJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiZyIsImdsb2JhbFRoaXMiLCJ0aGlzIiwiRnVuY3Rpb24iLCJlIiwid2luZG93Iiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiZG9jdW1lbnQiLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwibGVuZ3RoIiwiRXJyb3IiLCJyZXBsYWNlIiwicCIsInF1ZXJ5U2VsZWN0b3IiLCJ0ZXh0Q29udGVudCIsIm5hbWVJbnB1dCIsImFib3V0SW5wdXQiLCJidG5FZGl0IiwiZWRpdFBvcHVwIiwiYnRuTmV3UGxhY2UiLCJhZGRGb3JtIiwiZWRpdEZvcm0iLCJuYW1lSW1nIiwiQ2FyZCIsImNvbnN0cnVjdG9yIiwiZGF0YSIsImhhbmRsZUNhcmRDbGljayIsImNhcmRUZW1wbGF0ZVNlbGVjdG9yIiwiX25hbWUiLCJuYW1lIiwiX2xpbmsiLCJsaW5rIiwiX2NhcmRUZW1wbGF0ZSIsIl9oYW5kbGVDYXJkQ2xpY2siLCJjcmVhdGVDYXJkIiwiX2VsZW1lbnQiLCJfY2xvbmVDYXJkIiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiY2FyZEltZyIsImFsdCIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJhZGRFdmVudExpc3RlbmVyIiwiX29uQ2xpY2tEZWxldGUiLCJfb25DbGlja0xpa2UiLCJiaW5kIiwicmVtb3ZlIiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwiRm9ybVZhbGlkYXRvciIsImNvbmZpZyIsImZvcm1FbGVtZW50IiwiX2Zvcm1FbGVtZW50IiwiX2lucHV0U2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvbkVsZW1lbnQiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfaW5wdXRMaXN0IiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsIl9zaG93SW5wdXRFcnJvciIsImlucHV0IiwiZXJyb3JNZXNzYWdlIiwiZXJyb3JFbGVtZW50IiwiaWQiLCJhZGQiLCJfaGlkZUlucHV0RXJyb3IiLCJfdmFsaWRhdGVGaWVsZCIsInZhbGlkaXR5IiwidmFsaWQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsIl9oYXNJbnZhbGlkSW5wdXQiLCJzb21lIiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwic2V0QXR0cmlidXRlIiwicmVtb3ZlQXR0cmlidXRlIiwiZm9yRWFjaCIsInJlc2V0U3BwYW5FcnJvciIsImVuYWJsZVZhbGlkYXRpb24iLCJldnQiLCJwcmV2ZW50RGVmYXVsdCIsIlBvcHVwIiwic2VsZWN0b3IiLCJfcG9wdXAiLCJfaGFuZGxlRXNjQ2xvc2UiLCJfb3ZlcmxheUNsaWNrIiwib3BlbiIsImNsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImtleSIsImNvbnRhaW5zIiwidGFyZ2V0Iiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlRm9ybVN1Ym1pdCIsInN1cGVyIiwiX2hhbmRsZUZvcm1TdWJtaXQiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJfZm9ybVZhbHVlcyIsInZhbHVlIiwiX2Zvcm0iLCJyZXNldCIsInZhbGlkYXRpb25Db25maWciLCJmb3JtU2VsZWN0b3IiLCJpbml0aWFsQ2FyZHMiLCJ1c2VySW5mbyIsIm5hbWVTZWxlY3RvciIsImFib3V0U2VsZWN0b3IiLCJfYWJvdXQiLCJnZXRVc2VySW5mbyIsImFib3V0Iiwic2V0VXNlckluZm8iLCJwb3B1cFdpdGhJbWFnZSIsIl9wb3B1cEltZyIsIl9wb3B1cE5hbWVJbWciLCJwb3B1cEFkZCIsInBsYWNlIiwiY2FyZFNlY3Rpb24iLCJhZGRJdGVtcyIsInBvcHVwRWRpdCIsIml0ZW1zIiwicmVuZGVyZXIiLCJfaXRlbXMiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwicmVuZGVySXRlbXMiLCJpdGVtIiwiZWwiLCJwcmVwZW5kIiwiYWRkRm9ybVZhbGlkIiwiZWRpdEZvcm1WYWxpZCIsInBvcHVwSW1hZ2VTcmMiLCJnZXRBdHRyaWJ1dGUiLCJwb3B1cEltYWdlQWx0Il0sInNvdXJjZVJvb3QiOiIifQ==